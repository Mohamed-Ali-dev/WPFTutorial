<Window x:Class="WPFStartTutorial.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFStartTutorial"
        mc:Ignorable="d" 
        Title="MainWindow" Height="450" Width="500">
    <!-- 2. MainWindow.xaml
•	Purpose: Defines the user interface (UI) for the main window.
•	Flow:
•	Uses a Grid layout to organize controls.
•	Contains a DataGrid to display a list of items.
•	Contains a StackPanel with TextBox controls to edit properties of the selected item.
•	Uses data binding to connect UI elements to properties in the ViewModel (Items, SelectedItem, and their sub-properties).
    -->
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Content="Add" Width="75" Height="30" 
                    Margin="0,0,5,0" Command="{Binding AddCommand}"/>
            <Button Content="Delete" Width="75" Height="30"
                    Margin="0,0,5,0" Command="{Binding DeleteCommand}"/>
            <Button Content="Save" Width="75" Height="30"
                    Margin="0,0,5,0" Command="{Binding SaveCommand}"/>

        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>

            <DataGrid 
                ItemsSource="{Binding Items}"
                SelectedItem="{Binding SelectedItem}"
                CanUserAddRows="False" CanUserDeleteRows="False"
                AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="4*"/> 
                    <DataGridTextColumn Header="Serial Number" Binding="{Binding SerialNumber}" Width="4*"/> 
                    <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}" Width="2*"/> 
                </DataGrid.Columns>
            </DataGrid>
            <!--We cannot bind the TextBox to the item
            we need to bind it to a property in it-->
            <StackPanel Grid.Column="1" >
                <Label Content="Name" />
                <!-- By default:
                    •	For a TextBox, the binding source (your ViewModel property) is updated only when the control loses focus (i.e., when the user tabs out or clicks elsewhere).
                    With UpdateSourceTrigger=PropertyChanged:
                    •	The binding source is updated immediately as the user types (on every keystroke), not just when the control loses focus.
                -->
                <TextBox Margin="5,0,5,15" Text="{Binding SelectedItem.Name, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Serial Namber"/>
                <TextBox Margin="5,0,5,15" Text="{Binding SelectedItem.SerialNumber, UpdateSourceTrigger=PropertyChanged}" />
                <Label Content="Quantity"/>
                <TextBox Margin="5,0,5,15" Text="{Binding SelectedItem.Quantity, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
